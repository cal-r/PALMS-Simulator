name: Build Executables

on:
  push:
    branches: [release]

jobs:
  build:
    name: Build executables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: windows
          - os: macos-13
            target: macos-intel
          - os: macos-latest
            target: macos-silicon

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v4
      with:
        python-version: '3.12.6'
        cache: 'pip'

    - name: Install patchelf for Linux
      if: matrix.target == 'linux'
      run: sudo apt-get update && sudo apt-get install -y patchelf

    - name: Install Python deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "nuitka[full]"

    - name: Build with Nuitka
      shell: bash
      env:
        SRC: PALMS.py
        DATA: resources=resources
      run: |
        COMMON="--enable-plugin=pyside6 \
                --enable-plugin=matplotlib \
                --include-data-dir=${DATA} \
                --output-filename=PALMS \
                --jobs=2 \
                --show-progress \
                --clang \
                --lto=no"
        case "${{ matrix.target }}" in
          macos-*)   python -m nuitka $COMMON --standalone --macos-app-icon=resources/palms.icns --output-dir=build "$SRC" ;;
          windows)   python -m nuitka $COMMON --onefile --assume-yes-for-downloads --windows-icon-from-ico=resources/palms.ico --output-dir=build "$SRC" ;;
          linux)     python -m nuitka $COMMON --onefile --output-dir=build "$SRC" ;;
        esac

    - name: Ad-hoc sign macOS bundle
      if: startsWith(matrix.target, 'macos-')
      run: |
        codesign --sign - --deep --force --options runtime build/PALMS.dist

    - name: Prepare release dir
      run: mkdir -p release

    - name: Archive Linux binary
      if: matrix.target == 'linux'
      run: |
        chmod +x build/PALMS
        tar -czf palms.tar.gz Experiments -C build PALMS

    - name: Archive Windows binary
      if: matrix.target == 'windows'
      run: |
        7z a -tzip palms.zip build/PALMS.exe
        7z a -tzip palms.zip Experiments

    - name: Archive macOS bundle
      if: startsWith(matrix.target, 'macos-')
      run: |
        tar -czf palms.tar.gz Experiments -C build PALMS.dist

    - name: Commit latest tag
      if: github.ref == 'refs/heads/release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -f latest
        git push origin latest --force

    - uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        files: release_*

    - if: failure()
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        files: release_*

