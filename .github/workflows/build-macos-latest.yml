name: Build and Test MacOS Executable

on:
  push:
    branches:
      - release
      - release-test

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-and-build
        with:
          os: macos-latest
          artifact-name: macos-latest-release

  test-macos:
    name: Test macOS Executable
    runs-on: macos-latest
    needs: build-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-release
          path: release/

      - name: Extract .tar.gz
        shell: bash
        run: |
          mkdir -p dist
          tar -xzf release/release_macos.tar.gz -C dist

      - name: Make app executable
        shell: bash
        run: chmod +x dist/PALMS.app/Contents/MacOS/PALMS

      - name: Run app, screenshot, and check for errors
        shell: bash
        run: |
          set -euxo pipefail

          echo "Start time: $(date '+%Y-%m-%d %H:%M:%S.%3N')"
          dist/PALMS.app/Contents/MacOS/PALMS --smoke-test Experiments/Negative_patterning.rw &

          PID=$!
          sleep 20
          echo "Making screenshot"
          screencapture -x screenshot.png
          wait $PID

          EXIT_CODE=$?
          echo "End time: $(date '+%Y-%m-%d %H:%M:%S.%3N')"

          echo "App exited with code $EXIT_CODE"

          if [ $EXIT_CODE -ne 0 ]; then
            exit 1
          fi
          # Check for crash logs in last 10 minutes
          mkdir -p logs/crash_reports
          NEW_CRASH=$(find ~/Library/Logs/DiagnosticReports -name "*.crash" -type f -newermt "-10 minutes" || true)
          if [ ! -z "$NEW_CRASH" ]; then
            echo "Crash log(s) found!"
            cp $NEW_CRASH logs/crash_reports/
            ls -l $NEW_CRASH
            cat $NEW_CRASH
            exit 1
          fi

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: screenshot.png

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs

      - name: Create or update "latest" tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f latest
          git push origin latest --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: release/release_macos.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
