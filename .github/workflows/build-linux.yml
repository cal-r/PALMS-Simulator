name: Build Linux Executable

on:
  push:
    branches: [release]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-and-build
        with:
          os: ubuntu-latest
          artifact-name: ubuntu-latest-release

  test-linux:
    name: Test Linux Executable
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-release
          path: release/

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb scrot

      - name: Extract .tar.gz
        shell: bash
        run: |
          mkdir -p dist
          tar -xzf release/release_linux.tar.gz -C dist

      - name: Run app, screenshot, and check for errors
        shell: bash
        run: |
          set -euxo pipefail
          echo "Start: $(date '+%Y-%m-%d %H:%M:%S.%3N')"

          export XVFB_DISPLAY=":99"
          Xvfb "$XVFB_DISPLAY" -screen 0 1920x1080x24 >/dev/null 2>&1 &
          XVFB_PID=$!
          trap 'kill $XVFB_PID || true' EXIT
          export DISPLAY="$XVFB_DISPLAY"
          sleep 5

          cd dist
          ./PALMS --smoke-test Experiments/Haselgrove_etal_2010_exp1.rw &
          PID=$!

          sleep 30
          echo "Making screenshot"
          scrot ../screenshot.png

          set +e
          wait $PID
          EXIT_CODE=$?
          set -e

          echo "End: $(date '+%Y-%m-%d %H:%M:%S.%3N')"
          echo "App exited with code $EXIT_CODE"
          if [ $EXIT_CODE -ne 0 ]; then exit 1; fi

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: screenshot.png

      - name: Create or update "latest" tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f latest
          git push origin latest --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: release/release_linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
